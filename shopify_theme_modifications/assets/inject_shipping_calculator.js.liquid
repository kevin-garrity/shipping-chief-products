
inject_shipping_calculator = function(data) {
  $('#shipping-calculator').html(data);
  $('#new_australia_post_api_connection').attr("action", host + action);
  $('.error').hide();

  $(".actions > input").click(ajax_request_calculation);
};

ajax_request_calculation = function(data) {
  var country_code = $("select#australia_post_api_connection_country_code option:selected").attr("value");
  var to_postcode = $("input#australia_post_api_connection_to_postcode").val();
  var from_postcode = $("input#australia_post_api_connection_from_postcode").val();
  var weight = $("input#australia_post_api_connection_weight").val();

  var height = $("input#australia_post_api_connection_height").val();
  var width = $("input#australia_post_api_connection_width").val();
  var length = $("input#australia_post_api_connection_length").val();
  var blanks = $("input#australia_post_api_connection_blanks").val();
  var shop_url = window.location.hostname;

  var dataHash = {
    weight: weight,
    to_postcode: to_postcode,
    from_postcode: from_postcode,
    country_code: country_code,
    height: height,
    width: width,
    length: length,
    blanks: blanks,
    shop: shop_url
  }

  if (validate_and_process_form(dataHash)) {
    submit_calculation_request(dataHash);
  }

  return false;
}

submit_calculation_request = function(dataHash) {
  tokentag = $('#tokentag').val()

  var params = {
    authenticity_token: tokentag,
    australia_post_api_connection: dataHash,
  }

  $.ajaxSetup({
    beforeSend: function(xhr) {
      xhr.setRequestHeader('X-CSRF-TOKEN', tokentag);
    }
  });

  $("#results").empty();
  update_loader_and_submit("POST", params, function(data) { 
    $('#results').append(data); 
    $('input:radio').change(remove_and_add_again_shipping_line_item);

    $('input:radio').eq(0).change();
  });
}

remove_and_add_again_shipping_line_item = function() {
  var price = $(this).siblings('.option-price').text();
  var price_string = price.replace(/ -- /, '');
  var shipping_quantity = Number(price.replace(/[^0-9]+/g,""));
  var shipping_type = $(this).siblings('label').text() + price;

  // remove the existing line item
  remove_shipping_item(function() {
    // once the item is removed spaghetti add the line item back in!
    // we do this to change the line item property
    $('input#quantity').attr('value', shipping_quantity);
    $('input#shipping-type').val(shipping_type);
    $('input#Shipping').click(); // add the logical shipping item
  });

  // we assume that the first table row on a cart page is the headers
  var table_header = $('tr').first()

  // we iterate over the table headers
  var headers = {};
  table_header.children('th').each(function(index) {
    var header = $(this).text()
    headers[header.toLowerCase()] = index;
  });

  var line_item_template = $('tr.item').first().clone()
  var table_data = line_item_template.children()

  table_data.eq(headers['item']).html('Shipping: ' + $(this).siblings('label').text())
  table_data.eq(headers['quantity']).html("")
  table_data.eq(headers['total']).html(price_string)
  table_data.eq(headers['price']).html(price_string)

  line_item_template.attr('class', 'item shipping');

  $('.items tbody').append(line_item_template)
}


// once we are able to change line item properties from the api
// we will use this create or modify method instead
modify_or_update_shipping_line_item = function() {
  var price = $(this).siblings('.option-price').text();
  var shipping_quantity = Number(price.replace(/[^0-9\.]+/g,"")) * 100;
  var shipping_type = $(this).attr('value');

  // create or modify the Shipping line item
  // further, add the relevant shipping into to the line item properties
  if ( $('input#quantity').attr('value') === '0' ) {
    $('input#quantity').attr('value', shipping_quantity);
    $('input#shipping-type').val(shipping_type);
    $('input#Shipping').click();
  } else {
    $('input#quantity').attr('value', shipping_quantity);
    $('input#shipping-type').val(shipping_type);
    $('.change-quantity a').click();
  }
}

remove_shipping_item = function(callback) {
  var html_shipping_line_item = $('.item.shipping');
  var variant_id = $('input[name=id]').attr('value');

  $('input#shipping-type').val("");

  // clear the old shipping item
  if ( html_shipping_line_item.length ) {
    html_shipping_line_item.remove();
  }
  Shopify.removeItem(variant_id, callback);
}

validate_and_process_form = function(dataHash) {
  // validate and process form here
  $('.error').hide();

  // TODO
    //   So this seems weird: the heigh, width, and length are all calculated
  //   server side, then sent here to the client, and then returned to the
  //   server... this could be a risk I think, and it is surely inefficient

  // client side validation example
  if (dataHash['country_code'] === "AUS" && dataHash['to_postcode'] === "") {
    $("#postcode > .error").show();
    $("input#australia_post_api_connection_to_postcode").focus();
    return false;
  }

  return true;
}

$(document).on('change', '#country-select', function() {

  var selected_text = $('#country-select :selected').text()

  $("#indicator").empty().hide();
  $("#results").empty();

  // we need to cancel the current request, since this action
  // is not guaranteed to fire a new request.
  if (xhr && xhr.readyState != 4) {
    xhr.abort();
  }

  if ( selected_text !== 'Australia' ) {
    $('#postcode').hide()
  } else {
    $('#postcode').show()
  }

  $(".actions > input").click();

});
