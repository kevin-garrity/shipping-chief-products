//VERSION 2
var request_params;
var webify_unavailable = false;
var flat_shipping_rate;

inject_shipping_calculator = function(data) {

  webifyJQ('#webify-shipping-calculator').html(data);
  webifyJQ('#new_australia_post_api_connection').attr("action", host + action);
  webifyJQ('.error').hide();

  webifyJQ(".actions > input").click(ajax_request_calculation);
  var cart_id = webifyJQ.cookie('cart');
  var webify_cart_cookie = webifyJQ.cookie(cart_id);

  if (webify_cart_cookie != undefined) {
    var json_cookie = JSON.parse(webify_cart_cookie);

    webifyJQ("select#australia_post_api_connection_country_code").val(json_cookie['country_code']);
    webifyJQ("input#australia_post_api_connection_to_postcode").val(json_cookie['to_postcode']);
    webifyJQ("#country-select").change(); // in order to hide the country code and make the request
  } else {

  }
};

use_flat_shipping = function(rate) {
  // In here we will remove the ban on checking out, and add a shipping item with
  // the flat rate from store metafields

  flat_shipping_rate = rate;
  webify_unavailable = true;
  remove_and_add_again_shipping_line_item();
};

ajax_request_calculation = function(data) {
  var country_code = webifyJQ("select#australia_post_api_connection_country_code option:selected").attr("value");
  var to_postcode = webifyJQ("input#australia_post_api_connection_to_postcode").val();
  var from_postcode = webifyJQ("input#australia_post_api_connection_from_postcode").val();
  var weight = webifyJQ("input#australia_post_api_connection_weight").val();

  var height = webifyJQ("input#australia_post_api_connection_height").val();
  var width = webifyJQ("input#australia_post_api_connection_width").val();
  var length = webifyJQ("input#australia_post_api_connection_length").val();
  var blanks = webifyJQ("input#australia_post_api_connection_blanks").val();
  var shop_url = window.location.hostname;

  // get the shopify cart ID and fashion our own cookie
  var cart_cookie = webifyJQ.cookie('cart');
  var cart_data = JSON.stringify({ country_code: country_code, to_postcode: to_postcode });
  webifyJQ.cookie(cart_cookie, cart_data);

  var dataHash = {
    weight: weight,
    to_postcode: to_postcode,
    from_postcode: from_postcode,
    country_code: country_code,
    height: height,
    width: width,
    length: length,
    blanks: blanks,
    shop: shop_url
  }

  if (validate_and_process_form(dataHash)) {
    submit_calculation_request(dataHash);
  }

  return false;
}

submit_calculation_request = function(dataHash) {
  tokentag = webifyJQ('#tokentag').val()

  var params = {
    authenticity_token: tokentag,
    australia_post_api_connection: dataHash,
  }

  webifyJQ.ajaxSetup({
    beforeSend: function(xhr) {
      xhr.setRequestHeader('X-CSRF-TOKEN', tokentag);
    }
  });

  webifyJQ("#results").empty();
  update_loader_and_submit("POST", params, function(data, query_string) {
    request_params = parseQueryString(query_string);
    webifyJQ('#results').append(data);
    webifyJQ('input:radio').change(remove_and_add_again_shipping_line_item);

    webifyJQ('input:radio').eq(0).change();

    // if webify returned any errors, they will be in the alert-box
    if (webifyJQ('#results .alert').length > 0) {
      remove_shipping_item();
    }
  },
  function(data) { 
  var default_charge = webifyJQ('input[name=default_shipping_charge]').attr('value');
  
  use_flat_shipping(default_charge); }
  );

}

remove_and_add_again_shipping_line_item = function() {
  var price = webifyJQ(this).siblings('.option-price').text();
  var price_string = price.replace(/ -- /, '');
  var shipping_quantity = Number(price.replace(/[^0-9]+/g,""));
  var shipping_type = webifyJQ(this).siblings('label').text() + " " + price;
  var shipping_product_id = webifyJQ('#shipping_product_id').text();
  var line_item_properties = {};


  
  if (webify_unavailable === true) {
    // money could come in as 12, 12.3 or 12.99

    shipping_quantity = String(flat_shipping_rate).replace(/\./, "")
    while (shipping_quantity.length < 4) {
      shipping_quantity = shipping_quantity.concat('0');
    }
    price_string = (shipping_quantity/100).toFixed(2);
    price_string = "$" + String(price_string);
    shipping_type = "default shipping type"
    shipping_product_id = webifyJQ('#shipping_product_id').text();
    line_item_properties = {
      shipping_type: encodeURIComponent(shipping_type),
      country_code: encodeURIComponent("default estimate"),
      postcode: encodeURIComponent("default estimate")
    }

  } else {
    var line_item_properties = {
      shipping_type: encodeURIComponent(shipping_type),
      country_code: encodeURIComponent(request_params["australia_post_api_connection[country_code]"]),
      postcode: encodeURIComponent(request_params["australia_post_api_connection[to_postcode]"])
    }
  }

  // remove the existing line item
  remove_shipping_item(function() {
  
  log("Free option selected ");  
  
    if (price_string == "$0.00" )
    {
      log("Free option selected ");  
      //do not add 0 dollar line to cart as it is not allowed shopify will add 1 cent to the price
      
      Webify.updateCartAttributes("attributes[shipping-option]='Free option selected'");
      
       //trigger a card update to have new total reflected.
       Webify.getCart();
    }
    else
    {
      
      Webify.addItem(shipping_product_id, shipping_quantity, line_item_properties, Webify.onItemAdded);
    }
  });

  var headers = {};


  var first_item_line = webifyJQ('tr.item').first();
  var found = false;

  // find the first row with product information
  /* row = first_item_line;
  children = row.children();
  for (var i = 0; i < children.length; i++)
  {
    cell = children[i];
    text = cell.innerHTML;
    // not image cell and remove item cell
    if (cell.className.indexOf("item") != -1 )
    {
      headers["item"] = i;
      found = true;
    }
    else if (cell.className.indexOf("quantity") != -1 )
    {
      headers["quantity"] = i;
      found = true;
    }
    else if (cell.className.indexOf("price") != -1 )
    {
      headers["price"] = i;
      found = true;
    }
    else if (cell.className.indexOf("total") != -1 )
    {
      headers["total"] = i;
      found = true;
    }
  }*/

  if (found)
  {
    var line_item_template = webifyJQ('tr.item').first().clone();

    var table_data = line_item_template.children();

    table_data.eq(headers['item']).html('Shipping: ' + webifyJQ(this).siblings('label').text());
    text = table_data.eq(headers['quantity']).html();
    if (text.length > 0) {
      table_data.eq(headers['quantity']).html('<input type="text" value="' +
        shipping_quantity +
        '" name="updates[' +
          shipping_product_id +
        ']" id="updates_' +
        shipping_product_id +
      '" size="4" class="text quantity">');
    }
    table_data.eq(headers['total']).html(price_string);
    table_data.eq(headers['price']).html('0.01');

    line_item_template.attr('class', 'item shipping');
    line_item_template.find('img').remove();
    line_item_template.find('a').remove();
    var input = line_item_template.find('input[type=submit]');

     if (input){
         input.remove();
     }
     var item = webifyJQ('tr.item').last();

    item.after(line_item_template);
  }
  else { //cannot find a line to add. Add the line as a div
    webifyJQ(":submit").last().after("<div class='item shipping' style='height:0px;visibility:hidden;text-align:right;'>Shipping Charge: " + price_string+ "</div>");
  }
}




remove_shipping_item = function(callback) {
  var html_shipping_line_item = webifyJQ('.item.shipping');
  var variant_id = webifyJQ('input[name=shipping_variant_id]').attr('value');

  // clear the old shipping item
  if ( html_shipping_line_item.length ) {
    html_shipping_line_item.remove();
  }
  Webify.removeItem(variant_id, callback);
}

validate_and_process_form = function(dataHash) {
  // validate and process form here
  webifyJQ('.error').css('color', 'red').hide();
  webifyJQ("#postcode > span").show();

  // TODO
    //   So this seems weird: the heigh, width, and length are all calculated
  //   server side, then sent here to the client, and then returned to the
  //   server... this could be a risk I think, and it is surely inefficient

  // client side validation example
  if (dataHash['country_code'] === "AUS" && dataHash['to_postcode'] === "") {
    remove_shipping_item();
    webifyJQ("#postcode > .error").show();
    webifyJQ("#postcode > span").hide();
    webifyJQ("input#australia_post_api_connection_to_postcode").focus();
    return false;
  }

  return true;
}

webifyJQ(document).on('change', '#country-select', function() {

  var selected_text = webifyJQ('#country-select :selected').text()

  webifyJQ("#indicator").empty().hide();
  webifyJQ("#results").empty();

  // we need to cancel the current request, since this action
  // is not guaranteed to fire a new request.
  if (xhr && xhr.readyState != 4) {
    xhr.abort();
  }

  if ( selected_text !== 'Australia' ) {
    webifyJQ('#postcode').hide()
  } else {
    webifyJQ('#postcode').show()
  }

  webifyJQ(".actions > input").click();

});
