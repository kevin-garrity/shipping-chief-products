= form_for @australia_post_api_connection do |f|
  - if @australia_post_api_connection.errors.any?
    #error_explanation
      %h2= "#{pluralize(@australia_post_api_connection.errors.count, "error")} prohibited this australia_post_api_connection from being saved:"
      %ul
        - @australia_post_api_connection.errors.full_messages.each do |msg|
          %li= msg

  - flash.each do |key, msg|
    %div{:id => key}
      %p{:style => "float:right;"}= link_to_function 'X', "Effect.Fade('#{key}')"
      %p= msg
      .clear

  .row
    .six.columns
      .field
        = f.label :country_code
        = f.select :country_code, @countries, selected: "Australia"
      .field
        = f.label :to_postcode
        = f.number_field :to_postcode

      - if @calculated
        / Now it should render the calculated values as a set of radio buttons
        = render :partial => "calculations", :object => @australia_post_api_connection

      - else
        .actions
          = f.submit 'Calculate'

      .field.hidden
        / this is calculated in yaml and returned to us
        / so this field can remain hidden
        = f.label :weight
        = f.number_field :weight

      .field.hidden
        / this is calculated in preferences and returned to us
        / so this field can remain hidden
        = f.label :height
        = f.number_field :height

      .field.hidden
        / this is calculated in preferences and returned to us
        / so this field can remain hidden
        = f.label :width
        = f.number_field :width

      .field.hidden
        / this is calculated in preferences and returned to us
        / so this field can remain hidden
        = f.label :length
        = f.number_field :length

      .field.hidden
        / this is calculated in preferences and returned to us
        / so this field can remain hidden
        = f.label :from_postcode
        = f.number_field :from_postcode
