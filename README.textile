h1. World Shipping Calculator

h2. Installation

Remember to back up your theme before you start installing this app.

Copy the following files into the shop:
* assets/inject_shipping_calculator.js.liquid
* assets/update_loader_and_submit.js.liquid
* assets/ajaxify-shop.js
* assets/api.jquery.js
* assets/xdr.js.liquid
* assets/ajax-loader.gif
* snippets/add-to-cart.liquid
* snippets/request-shipping-form.liquid
* snippets/shipping-items-hidden-price.liquid

Add the following to templates/cart.liquid, after the cart form near the bottom of the file. Look for @<\form>@, the HTML that closes the form element.

@{% include 'request-shipping-form' %}@

Add the following to the bottom of assets/checkout.css.liquid. If you don't have a checkout.css.liquid file in your shop already, you should create it.

bc. /* Webify Changes
 * */
#overview #thumbs h3[title^="Shipping"] + span {
  display: none;
}

Add the following to the bottom of assets/style.css.liquid.

bc. form#world-shipping-cartform {
  display: none;
}

Wherever you find @{{ cart.item_count }}@ in the layout/theme.liquid file, replace it with:

@{{ include 'shipping-items-hidden-price' }}@

This is so that the number of items displayed in the cart will not reflect the secret hidden shipping line items we use internally.

Finally, in your store admin panel add a custom collection called 'shipping' with exactly 1 product, also called 'shipping'. Both of these names are case sensitive. The shipping product must have price $0.01. This is what is used by World Shipping Calculator to add the estimated cost of shipping to the shopper's cart. You must also give the shipping product a product-type, but that can be whatever you like (we don't use it).

Move to FAQ

In order to integrate smoothly with your store, World Shipping Calculator imagines that you have adopted certain conventions. This is so that World Shipping Calculator can interact with your store's cart, adding shipping price line items, and manipulating the various inputs.

* The Cart is a table
** The first @tr@ is the table header row
** The elements of the table header row are @th@ elements naming the columns
** In each subsequent table row, there is one table data corresponding to each header
** There are at least the following headers: item, quantity, total, price
* The Cart contains a form, with a submit input
** The @name@ attribute of the input used to proceed to checkout should be 'checkout'
* There is a @shipping@ collection
** The collection has just one product, the @shipping@ product
** The shipping product has price $0.01

This application was generated with the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem provided by the "RailsApps Project":http://railsapps.github.com/.

h2. Diagnostics

This application was built with recipes that are NOT known to work together.

This application was built with preferences that are NOT known to work together.

If the application doesn't work as expected, please "report an issue":https://github.com/RailsApps/rails_apps_composer/issues and include these diagnostics:

We'd also like to know if you've found combinations of recipes or preferences that do work together.

Recipes:
["config", "controllers", "devcloudcoder_core", "email", "extras", "frontend", "gems", "git", "init", "models", "readme", "routes", "run_generators", "setup", "testing", "views"]

Preferences:
{:authentication=>"shopify", :authorization=>"none", :ban_spiders=>true, :database=>"postgres", :deploy=>"heroku", :dev_webserver=>"thin", :email=>"gmail", :fixtures=>"factory_girl", :form_builder=>"simple_form", :frontend=>"foundation", :run_generators=>["css_canon:install", "devcloudcoder:shopify:create"], :git=>true, :github=>true, :integration=>"cucumber", :private_repo=>true, :prod_webserver=>nil, :quiet_assets=>true, :rvmrc=>true, :starter_app=>"shopify_app", :templates=>"haml", :unit_test=>"rspec"}

h2. Ruby on Rails

This application requires:

* Ruby version 1.9.3
* Rails version 3.2.9

Learn more about "Installing Rails":http://railsapps.github.com/installing-rails.html.

h2. Database

This application uses SQLite with ActiveRecord.

h2. Development

* Template Engine: Haml
* Testing Framework: RSpec and Factory Girl and Cucumber
* Front-end Framework: Zurb Foundation
* Form Builder: SimpleForm
* Authentication: None
* Authorization: None

h2. Email

The application is configured to send email using a Gmail account.

h2. Getting Started

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. Documentation and Support

This is the only documentation.

h4. Issues

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. Similar Projects

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. Contributing

If you make improvements to this application, please share with others.

* Fork the project on GitHub.
* Make your feature addition or bug fix.
* Commit with Git.
* Send the author a pull request.

If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I'll add a note to the README so that others can find your work.

h2. Credits

Lorem ipsum dolor sit amet, consectetur adipiscing elit.

h2. License

Lorem ipsum dolor sit amet, consectetur adipiscing elit.
